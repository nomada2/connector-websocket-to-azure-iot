branches:
  only:
  - "/^v[0-9]/"
os: linux
dist: trusty
language: shell
matrix:
  fast_finish: true
  include:
  - os: linux
    language: node_js
    node_js: '8'
    before_install:
    - sudo apt-get -qq update
    deploy:
      provider: npm
      email: serveradmin@octoblu.com
      api_key: 
      on:
        tags: true
        repo: octoblu/connector-websocket-to-azure-iot
  - os: linux
    dist: trusty
    language: shell
    sudo: required
    services:
    - docker
    install:
    - docker pull octoblu/meshblu-connector-builder:linux-x86
    script:
    - |
      docker run --rm --volume $PWD:/work \
        --env TRAVIS_REPO_SLUG=$TRAVIS_REPO_SLUG \
        --env TRAVIS_BRANCH=$TRAVIS_BRANCH \
        --env MESHBLU_CONNECTOR_UPLOADER_GITHUB_TOKEN=$MESHBLU_CONNECTOR_UPLOADER_GITHUB_TOKEN \
        --env AWS_REGION=$AWS_REGION \
        --env AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY \
        --env AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID \
        --env MESHBLU_CONNECTOR_ENCRYPTION_PASSWORD=$MESHBLU_CONNECTOR_ENCRYPTION_PASSWORD \
        --env MESHBLU_CONNECTOR_CERT_PASSWORD=$MESHBLU_CONNECTOR_CERT_PASSWORD \
        octoblu/meshblu-connector-builder:linux-x86 \
          bash -c 'export HOME=/tmp/cache \
            && meshblu-connector-pkger \
            && meshblu-connector-installer-debian --destination-path=/usr/share/meshblu-connectors/connectors-no-config/connector-websocket-to-azure-iot \
            && meshblu-connector-uploader-github \
            && upload-deb-s3 \
          '
  - os: linux
    dist: trusty
    language: shell
    sudo: required
    services:
    - docker
    install:
    - docker pull octoblu/meshblu-connector-builder:linux-x64
    script:
    - |
      docker run --rm --volume $PWD:/work \
        --env TRAVIS_REPO_SLUG=$TRAVIS_REPO_SLUG \
        --env TRAVIS_BRANCH=$TRAVIS_BRANCH \
        --env MESHBLU_CONNECTOR_UPLOADER_GITHUB_TOKEN=$MESHBLU_CONNECTOR_UPLOADER_GITHUB_TOKEN \
        --env AWS_REGION=$AWS_REGION \
        --env AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY \
        --env AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID \
        --env MESHBLU_CONNECTOR_ENCRYPTION_PASSWORD=$MESHBLU_CONNECTOR_ENCRYPTION_PASSWORD \
        --env MESHBLU_CONNECTOR_CERT_PASSWORD=$MESHBLU_CONNECTOR_CERT_PASSWORD \
        octoblu/meshblu-connector-builder:linux-x64 \
          bash -c 'export HOME=/tmp/cache \
            && meshblu-connector-pkger \
            && meshblu-connector-installer-debian --destination-path=/usr/share/meshblu-connectors/connectors-no-config/connector-websocket-to-azure-iot \
            && meshblu-connector-uploader-github \
            && upload-deb-s3 \
          '
  - os: linux
    sudo: required
    language: shell
    services:
    - docker
    install:
    - docker pull octoblu/meshblu-connector-builder:linux-armv7
    script:
    - |
      docker run --rm --volume $PWD:/work \
        --env TRAVIS_REPO_SLUG=$TRAVIS_REPO_SLUG \
        --env TRAVIS_BRANCH=$TRAVIS_BRANCH \
        --env MESHBLU_CONNECTOR_UPLOADER_GITHUB_TOKEN=$MESHBLU_CONNECTOR_UPLOADER_GITHUB_TOKEN \
        --env AWS_REGION=$AWS_REGION \
        --env AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY \
        --env AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID \
        --env MESHBLU_CONNECTOR_ENCRYPTION_PASSWORD=$MESHBLU_CONNECTOR_ENCRYPTION_PASSWORD \
        --env MESHBLU_CONNECTOR_CERT_PASSWORD=$MESHBLU_CONNECTOR_CERT_PASSWORD \
        octoblu/meshblu-connector-builder:linux-armv7 \
          bash -c 'export HOME=/tmp/cache \
            && meshblu-connector-pkger \
            && meshblu-connector-installer-debian --destination-path=/usr/share/meshblu-connectors/connectors-no-config/connector-websocket-to-azure-iot \
            && meshblu-connector-uploader-github \
            && upload-deb-s3 \
          '
env:
  global:
  - secure: TRYdIiBSQKjrvb1SiHx/v7V4zfZfW4+cNaD76yzx8f5qZVAJBCq3cMSEkiY0+W+uQCgrVYbU97cCYdIhBAsX6bakRLokAgStLGcQ7/CCPLnvsOXPrBdRGWsc8f7j2I9LBVXPykRK0WdOkg+YjBi1Q5Cmr5AJO50ayc0dDfMRxpBC06kENlHa00GdYp3p/Thr/cmge7gzYA4VifHuZudfC5xyuvC49Wj+A2KPh/2wsGqInvy9WMl0eI2Mli/X6DdafXYxf0QnLWFMRFa7g25dQXN+IPvdpEVZnoWDgtdINr522+Y80zvAh8W8/o0YwTdzGe04KWVn7dG+pnpn8qAgzbkTgAVD3Z+nsf6JuL46hGkXJYbYdI7EwsONIXSaXzq+qOLVQHidyeC98/8EwFIyK/tGMg2LPbiixhwss6o5AEoBn3PICy+QiSfMMbHCFTbH129N9AldnIUhJ2VjOP9addGXqV+tK7hl/mM3boGNIvIxQX7StINVmpdQblwLw4nkjQHq8OaLAKoOaPcwnynhUHjJ2IJgHUiGmonPhMxU2xVIKTAnnBbGHq5t6SvgFXdg/wd2TBRjScPfOqO/rwu5vlWLfacXLab7Ee0Noi81jE91k1EzmvZ0v6VhCWIZSo/l0liQQocGtY2M07lORYHWz9vGVbBljQ/Becrxpvo6BG0=
  - secure: HQ9o+Nn3c2sFW7TXHm9BdYl+1feCKJJ6rm6jI/2tz1qv5y34Y+3AYZ0QBWxU5sKLsnkDlv5lTOuXU6ZXpTETwOo06rtVVx1dIz1iqev3brfCkDadE8MqfQO9BRoaz5x5/KNLjSlX+DRDrZft09c2KYS+O9vj3WdJKbMieEyJJM4BPqgkTu3hu5GnQl8zRGEsWM4xmf2/CKeaO/XPDr8rsJOucsf/rN2BcL14eQ2JsBYwJxZBG+1Sg4bpieimmtos1Jo1jIcckr+DUXswd2swMX2hOYb1uAplt+8lzARmhb4uX6xzQbGg5EnqwMBobgfTAek2MHaeLmIaSZSpBhjCUSrTIgtH1eW38K5fmcP2GPJQyC4m9cr2Om3bHHDWW0AiwTNWXo9uG0VBJg/Ypn6e5WxX16XDGESvRXVXOx6JZdudnF8alou2pecAScN/2yxEO4cWZCSL/XTyr+NwiPW1yNkWapFos/7+eEbOPtKwDIFJifmPd+v60HLFSwGlS3R5IoPjk6xQEtWdJSPuuJ7EFFm1CVeGie8gJjU6AxvWZ3QLyHkxOtv0onMBxOGVIxhk/M++NJjT9i8cvyCsiKmdPCQNcXizLXpjkdi44u5R3r9w6xtVgktlXYQbovS+bjNlfpkL5GYRKQDFJOegFdl4NRSx8K+sXIfy0ziMxdBDnBo=
  - secure: D39mIdNJnAbLhogrrs47TRKvegbVS14v62qfULV5AZMtJIHPCiNTKPJRryEMW0JP69yiPlpKf4+gIOnWfFflhIoMKXYqHkHbGrLifVs0k6PVRmwVKack0KlqXyUpA+FJBKcGAiOD5zWbfReamhIQe4sM5Zv6h+aRvxn7YDxElOSQBcttX7n6htOhqa4njCQxKHVAVefkNoSTTzzMhyRcjM8e0TyegSDD3r5SKxyNUDK2Fx68f975vp6rE8bkUe4gULX7vaE+HQMBJn6ydWdI8r1IRkPaUHMfRMZDk6YdoeFnT9wQiMPdGHztvMn/05lmn/4/BgObBJmHosz35RH6MUOnoI5NQdhd8S6FpKENSvenkcrsbT++OdyE8Tf+Vnr7TOsfWBejdhcVbPSmdptKwzU3Ld8Eq+rZxY7qEKQ+6gKSY1nSAUA1I6GA6ct4gG5QLG100Ga/cT+L3LTc0irPnNNyL1eIvEGRvRrR2hiBdBjWW4gyjpRt9MLa9gI3Bpdu1c8w/LPKV5+tqfuwk1VDGeWNC6kNgIElDpk1MPSMksVWPmclDJqEwwlyK2iaBScMjJR9Jj1ubdsnAgNSGXGSTTj5ja3E/rJaN2NkWmuKJvTcq6ZysVzC7pgTEJAtDcPxI8ig226lSomwvengK9BYoFvTHaJKo1rkFwYbpgOAVco=
  - secure: ojMGymwj9MEXXaQ67W/7/4xCboculuBCNVbaTl3K4IS88y/eCsVsqcxWd4y94ZOYrKnMzgQDVx/pWYaKAWmf7xfvUgbJKfUDWK9evoG8uiMX7PPi0MBer5Zwm7FtdegbVwVwf2YmgS5dAiYPf9jPgDMbwhZfUaJCZ6aTObQB+x4NM4yZ19CriL673J5Y32HUdICssq19yLlMm7QMZfVAgsN6N8yvTI+DwLKuX/5P031bh7M/YlmwPrOMmJFbfnrMTCUBss5OTrnzqb3Vn4vbGe9Cua7poqiD/4PnBZ19sSZWlZgtr2zYUSsHDDKEk+Rrf42xKyFcU6AhH2KEH/pPnMUCetU7bbo1IlZGXxVT5SusfmNQ+1+6ZvRSendH3OvoAwaXlg+R5yfx/72e40Tbov/9ClNMnmqpYXe3iey1x2xYDZ3I1mqmpbEMQnwB5i/WaNxt6Pu2QtAT+/MkEQl3Ke4pFQgk4EUKI0KeaYVt4OVJewMZtXg1jtcoZt2ygVBZhSWQU4KMmCI/YkjkXhCEJVD2g2GSSsXaqv0yMseubwt/Y9aLUi+uUojHHNX+7vfm7Jw6I9oAlY257ZA27RW7Kwdru415zzyC91vfGQu7Hl23f3ZL8QF9VIeQBP3Wi0oMJOzvadDZkuU5FnF9DTtbKaKpx3mCFIr4S0i20XPOD98=
  - secure: GbVnW2lCjKnXwMGzZUFUpxLw+Oad0cMvwlfzl1B6okgBF21VmLhslSpuQ6aKt6ah3od2k5K5DzbSZGpN7t0NFM5q9F2X9u/DYotKehyiSFU2WZLGOYeOSAa+lnHmCQ8J2gMRojN4JW0eAeVnm0WpMHicBd/fmCBF1LCMxFUJP188JR82xTwVvym8Vo6rRPaELDW7EEhKcaLhyNuFl/9FzZTbi74bgCcxMFbfZP/Dr8i2jAUofwQl0Q9CodM1dSx25GHXT0fNL69rGY35HzAX6sEp4KU73MWgSJNcjQYc8+Br/WjWE3C1yDZfu4fKECB9VTvSjtUSrCuSmRgFujgdx2wJgy7p0ULUJVUQxohjTK1MudP+Unz6r4I9GRPU7/5iLtOj/msjbMkdcqFU5W1aB2foj8c4UX7oeJLUNdC27vyX64Rg/RLn0konzLgbqYBbSTkKw/DKoujO+psFmBmcEKCYl6w+vG9iZ0MzbDOBgkYG88snA1sZsWNsV88sw7KcWBd70pIvtA6SGNapsCPoBlFTT5nq+TsLnqm3ToPlbZ/j4IBsW/znZ9y1hg3V55of8OAhVrTEBpnNl4+xQxxEZySSH9JHeduyiyPGDxU1MVoJX60nVtvrOV0wzC6VJXue+ENUJjKJHSxBOQIrUm3G2gqY33RS6RdIKDBZ8EFRaxc=
  - secure: TSzl/7Zonbl2IIQBsz/AI3BNQyQKKrECDOvNxRqqZi3T7H1hh1LqM1/8lw8pHvZwgc0odctv6wM04DpXC2uhs/wHBjO8KLwGu0ZVWGKWD46Py80T8tnGU9eAQlnZTM4P6deQL3rITPIvuYiDGtV/uru4YefSxTbO2+9okGAL2OrG1wVuzAGHtVIcMTDAV2BQCJehJMYzpTzYJPrr2A5Fw8ac2MwSPZ/mmxpDSWEUV0Bvh1p2bBgN3GD/FcpOQz++oFMBKOktDQSkS6ZJ6hVfWlbe/1/tebRfhLb7NxhOWKalDpWDr94d40bLu8kiANFTmRrK6T+MRp20mwwe7ma7SdZ1qOAQ3uZLRPY9L2P5BYgzuE7LDDa55YMC8n00XqaJ2u5CYEk/SJbBBftIG7uZ2Uix9l+1Wg3mESm/3v0uQNYboDX9rtpuWXlB+EZfHYKCCr/a4ts4e3D6jQCuMIty55IPOZdnrzkcEtV9aQYRtVlOW4KnWMkumq69OrNT4ezdg1zKAtl4Vbyzs5+4p81Cm1iF+XCSMgpvaWrvH0qG1k5lyD2cnaXqGpwhnXzZp3KRM/HbN4/SUR2I2v/J1iRLnugU76BQPq4jXbG4YWxgNCWOrnjq5+ISWQrzQ+aaFd+mp+fAd+N5SGO4+rCoZA7MI0go9yGTXkS0KRDodBe8Mdg=
  - secure: obXmI78SM9mB2Cv46PYTHdC2VftRigz4bmvn4ockRxOKmv/uChbDN658sFvo8F3JO9eggrGWObq9Kqrh37Qc6R2FiidqCNvhe7ChgGXUK43dr7UAO2m4YsAF22qHDiydQFkoQKH4fv9cN6aSXpWIPH6DvAMUS/tXVhTB5AM3+Nvwc5fMTrvVMy4hEbws58vaYpuj1Y/krkjsEvJ8uE79GMiYAajTG3RlfXd4SUiIvEi9tadRhtySIbZFcACB1LjDsRBFXk4+PueauQLdxawLHc/JmARjooLRvVlnynn77XK0ulXs8dUzGwhCQT4uqasSTuP/ThI75eGtp+wqTrSKgeA7WeTCpF3fg0ImI2icfB/mdR7c3JL0VPrbQ09ME4v05d93/f4AnVQSsNcOd6EFlM7BscyF7bdv5oklMFW7elum0vuPA271yn6NUYbazA4f4GjcqAyuOC0obGPwz9zh+NQJD7JUQZZqTus6odwRa3uv6k1T0c5+4/0px7mmBpGDP5LrkaGFfyQsc6a3J2PVECqtUQ35OfdWYuPTAWeTz1LBoqWbzOaWK5cgyPCjlTTEQ2R/Bt3PhWX0KKD4AbKdjS01n8eH+AnlEScxCU2XUH/fWbOAmHnP4e/Lv652bNZRwbVSwWcD70yRFRn46E59TGSihIFLiz9y1I/ULuJN54c=
  - secure: SPQnmuBxl+SSgRSkgzXTmP7OKQhK0dZHHk1BhWE+OwMyebGju9MmZnlrCe4TbvCKD7f/x51LvcJ1U1yZF5SM4BNoTo2ijv9FNgO3gFmx1piN9J7xCOJn0fig+/VMle4jDN5m9oc9g7nKVcEHTIUNb6Q/MSzqRs/p60aNBJyBNKevDofHwQ3vj9DiCaq5Z5HQGwQScV+MZ9/3xw5yVrziFVoxfwo79K4hwFjcKAXAMbEczYV9r3dcHEbVpju0J20A9iD4x0htFDLrBiQgWbYN1Rxj3kZq5EwTrk+cVpDoEtCqMaVTIE1ah34kqt8IvC3osHg8JKTYrjW0wuBKRApelSaKrVxQ/IwmyqtBPeHPQ9VNEJT9GdcgFpJCvJ4qVI7ePQtnqx/6SgvNQJDUCWFalJPF5RxVOb5qa8ONDkzeH5ggjQXxn+Yf8H/v8ZNccOB73uNgOskzdXGrJ3iptAWDSUZO7Gzuhg16dIMymJXx7IgyQ5fhRPQIabtlKxs4cbWk7YgavN6eOb3fbjuLWB2hye/sVGxaouIPgI2uJl7ttuUiBli/nROxFNtoQ131BUpGdMLB57qM+oJc33S1xirEK1+MhcMhH6cl+LRhIXxsO5zjICZw6mFwRpa+Yjg8V20d10ZqjfRpBlIFvKHTEMUvam/OS0qUBnMqTMws+IRzR20=
